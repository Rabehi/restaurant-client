---
interface Props {
    id: number;
    nombre: string;
    precio: number;
}

const { nombre, precio, id } = Astro.props;
---

<div transition:persist class="flex justify-between mt-2">
    <div>
        <h2>
            {nombre}
            <span> - </span>
            {precio}<span>â‚¬</span>
        </h2>
    </div>
    <div>
        <button
            id={`increment-${id}`}
            type="button"
            class="text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm p-2.5 text-center inline-flex items-center dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800"
        >
            <svg
                class="w-3 h-3"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
            >
                <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 5v14M5 12h14"></path>
            </svg>
        </button>
        <a id={`contadorText-${id}`} class="ml-3 mr-3">0</a>
        <button
            id={`decrement-${id}`}
            type="button"
            class="text-white bg-red-500 hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm p-2.5 text-center inline-flex items-center dark:bg-red-400 dark:hover:bg-red-500 dark:focus:ring-red-800"
        >
            <svg
                class="w-3 h-3"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
            >
                <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M19 12H5"></path>
            </svg>
        </button>
    </div>
</div>

<script is:inline define:vars={{ id }}>
    const bIncrement = document.getElementById(`increment-${id}`);
    const bDecrement = document.getElementById(`decrement-${id}`);
    const contadorText = document.getElementById(`contadorText-${id}`);
    let count = 0;

    bIncrement?.addEventListener("click", () => {
        count++;
        contadorText.textContent = count.toString();
    });

    bDecrement?.addEventListener("click", () => {
        if (count > 0) {
            count--;
            contadorText.textContent = count.toString();
        }
    });
</script>
